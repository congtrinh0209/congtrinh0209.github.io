{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../src/util/dom.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["module","exports","Object","is","x","y","$","target","stat","mixins","name","functional","props","value","type","Number","default","max","String","render","parseInt","content","isGreater","h","staticClass","class","ctx","window","mounted","this","onObserve","destroyed","methods","i","length","options","callback","console","node","root","composed","baseMixins","onVisible","dirtyTypes","directives","resize","ripple","inheritAttrs","appendOuterIcon","autofocus","clearable","clearIcon","counter","Boolean","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","watch","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","clearableCallback","$refs","input","genAppendSlot","slot","$slots","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","attrs","disabled","genCounter","attrs$","dark","light","$scopedSlots","$createElement","genControl","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","lazyValue","id","readonly","on","keydown","onKeyDown","ref","modifiers","quiet","onResize","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","e","$nextTick","onClick","onFocus","attachedRoot","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","document","updateValue"],"mappings":"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","file":"js/chunk-f8799982.d715c0c1.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.es/ecma262/#sec-samevalue\n// eslint-disable-next-line es/no-object-is -- safe\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.es/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","/**\n * Returns:\n *  - 'null' if the node is not attached to the DOM\n *  - the root node (HTMLDocument | ShadowRoot) otherwise\n */\nexport function attachedRoot (node: Node): null | HTMLDocument | ShadowRoot {\n  /* istanbul ignore next */\n  if (typeof node.getRootNode !== 'function') {\n    // Shadow DOM not supported (IE11), lets find the root of this node\n    while (node.parentNode) node = node.parentNode\n\n    // The root parent is the document if the node is attached to the DOM\n    if (node !== document) return null\n\n    return document\n  }\n\n  const root = node.getRootNode()\n\n  // The composed root node is the document if the node is attached to the DOM\n  if (root !== document && root.getRootNode({ composed: true }) !== document) return null\n\n  return root as HTMLDocument | ShadowRoot\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport resize from '../../directives/resize'\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { attachedRoot } from '../../util/dom'\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'onResize',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: {\n    resize,\n    ripple,\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return [...(this.internalValue || '').toString()].length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return this.lazyValue?.toString().length > 0 || this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && !(this.isSingle && this.labelValue)\n    },\n    labelValue (): boolean {\n      return this.isFocused || this.isLabelActive\n    },\n  },\n\n  watch: {\n    // labelValue: 'setLabelWidth', // moved to mounted, see #11533\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    // #11533\n    this.$watch(() => this.labelValue, this.setLabelWidth)\n\n    this.autofocus && this.tryAutofocus()\n\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots.append) {\n        slot.push(this.$slots.append as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      const props = {\n        dark: this.dark,\n        light: this.light,\n        max,\n        value: this.computedCounterValue,\n      }\n\n      return this.$scopedSlots.counter?.({ props }) ?? this.$createElement(VCounter, { props })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners.change // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.isFocused || !this.hasLabel ? this.placeholder : undefined,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n        directives: [{\n          name: 'resize',\n          modifiers: { quiet: true },\n          value: this.onResize,\n        }],\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      const root = attachedRoot(this.$el)\n      if (!root) return\n\n      if (root.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input) return false\n\n      const root = attachedRoot(this.$el)\n      if (!root || root.activeElement === this.$refs.input) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n    onResize () {\n      this.setLabelWidth()\n      this.setPrefixWidth()\n      this.setPrependWidth()\n    },\n  },\n})\n"],"sourceRoot":""}